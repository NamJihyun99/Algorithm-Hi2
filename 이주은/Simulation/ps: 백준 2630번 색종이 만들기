//백준 2630번 색종이 만들기(https://www.acmicpc.net/problem/2630)

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.Arrays;
import java.util.LinkedList;
import java.util.PriorityQueue;
import java.util.Queue;
import java.util.StringTokenizer;

class Main {
	static int N, blue, white;
	static boolean[][] paper;
	
	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st;
		N = Integer.parseInt(br.readLine());
		paper = new boolean[N][N];
		
		for(int i=0; i<N; i++) {
			st = new StringTokenizer(br.readLine());
			
			for(int j=0; j<N; j++) {
				if(st.nextToken().equals("1"))
					paper[i][j] = true;
			}
		}
		
		Queue<int[]> queue = new LinkedList<>();
		queue.add(new int[] {0, 0, N});
		
		while(!queue.isEmpty()) {
			int[] curr = queue.poll();
			int x = curr[0];
			int y = curr[1];
			int n = curr[2];
			
			boolean hasTwoColor = false;
			for(int i=x; i<x+n; i++) {
				for(int j=y; j<y+n; j++) {
					if(paper[x][y] != paper[i][j]) {
						hasTwoColor = true;
						break;
					}
				}
				if(hasTwoColor)
					break;
			}
			
			if(!hasTwoColor) {
				if(paper[x][y])
					blue++;
				else
					white++;
				
				continue;
			}
			
			n = n/2;
			
			if(n==0)
				continue;
			
			queue.add(new int[] {x, y, n});
			queue.add(new int[] {x + n, y, n});
			queue.add(new int[] {x, y +n, n});
			queue.add(new int[] {x+n, y+n, n});
		}

		System.out.println(white+"\n"+blue);
	}
}
